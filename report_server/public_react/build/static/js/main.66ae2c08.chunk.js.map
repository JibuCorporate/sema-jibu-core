{"version":3,"sources":["config.js","providers/client.js","admin/users/list.js","admin/dashboard/operations.js","admin/users/create.js","elements/edit-toolbar.js","admin/users/edit.js","admin/users/index.js","admin/products/create.js","admin/products/edit.js","admin/products/list.js","admin/products/index.js","admin/kiosks/list.js","admin/kiosks/create.js","admin/kiosks/edit.js","admin/kiosks/index.js","admin/roles/index.js","admin/index.js","admin/allkiosk/index.js","admin/allRoles/index.js","admin/product_category/index.js","other/index.js","admin/dashboard/overview.js","admin/dashboard/index.js","elements/login.js","providers/auth.js","providers/actions.js","providers/rest.js","providers/realtime.js","providers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendUrl","webUrl","port","client","baseURL","axios","create","interceptors","request","use","accessToken","localStorage","getItem","headers","Authorization","httpClient","UserFilter","props","Filter","TextInput","label","source","alwaysOn","CustomButton","notify","useNotify","refresh","useRefresh","Button","onClick","user","window","confirm","record","username","post","then","response","console","log","data","active","catch","error","style","fontSize","redirect","_basePath","_id","EditToolbar","Toolbar","SaveButton","users","name","options","icon","AccountCircle","list","List","title","bulkActionButtons","perPage","filters","Datagrid","TextField","EmailField","ReferenceField","reference","link","EditButton","Create","SimpleForm","ReferenceInput","AutocompleteInput","optionText","edit","Edit","toolbar","useStyles","makeStyles","display","justifyContent","CustomToolbar","classes","id","PostPanel","resource","Typography","description","priceAmount","priceCurrency","unitsPerProduct","costOfGoods","sku","minQuantity","maxQuantity","unitMeasurement","SearchFilter","products","Book","resettable","ImageField","rowClick","expand","Title","kiosks","AccountBalance","DateField","roles","ShopTwo","allKiosks","allRoles","allProductCategories","defaultOverviewState","date","Date","franchises","Overview","state","updateStats","bind","subState","this","setState","get","message","prevProps","viewVersion","variant","Grid","className","grid","item","xs","md","container","spacing","Card","card","CardContent","content","justify","alignItems","React","Component","connect","admin","ui","showNotification","withStyles","theme","marginTop","unit","marginBottom","maxWidth","margin","transition","boxShadow","textAlign","padding","CustomLoginPage","Login","backgroundImage","authActions","AUTH_ERROR","status","Promise","reject","resolve","AUTH_LOGIN","params","password","usernameOrEmail","token","userSatus","setItem","alert","AUTH_LOGOUT","_params","_client","removeItem","AUTH_CHECK","AUTH_GET_PERMISSIONS","decodeJwt","jsonToken","authProvider","type","action","restActions","CREATE","url","method","DELETE","DELETE_MANY","ids","stringify","GET_LIST","pagination","sort","filter","GET_MANY","GET_MANY_REFERENCE","page","field","order","query","target","GET_ONE","UPDATE","UPDATE_MANY","resourceAction","realTimeProvider","dataProvider","realtimeSaga","subscribe","observer","intervalId","setInterval","results","next","unsubscribe","clearInterval","undefined","complete","observeRequest","getConfig","getAction","HttpError","config","App","Admin","dashboard","customSagas","loginPage","resources","role","code","other","getResources","Object","keys","map","resourceName","Resource","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66ae2c08.chunk.js","sourcesContent":["\r\nmodule.exports.backendUrl = \"http://142.93.115.206:3002/\";\r\nmodule.exports.webUrl =  \"http://142.93.115.206:3002/\";\r\nmodule.exports.port = 3000;\r\n","import axios from \"axios\";\r\n\r\nimport { backendUrl } from \"../config\";\r\n\r\nexport function httpClient(baseURL) {\r\n  const client = axios.create({ baseURL });\r\n  client.interceptors.request.use(request => {\r\n    const accessToken = localStorage.getItem(\"token\");\r\n    return {\r\n      ...request,\r\n      headers: {\r\n        ...request.headers,\r\n        ...(accessToken ? { Authorization: `Bearer ${accessToken}` } : {})\r\n      }\r\n    };\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport const client = httpClient(backendUrl);\r\n","import React from \"react\";\r\nimport { List, Datagrid,Button, Filter,EditButton,useNotify,useRefresh, TextField, TextInput, EmailField, ReferenceField } from \"react-admin\";\r\nimport IconEvent from '@material-ui/icons/Event';\r\nimport { changeUserStatus } from \"../dashboard/operations\";\r\nconst UserFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"customfilter\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\n\r\nconst CustomButton = (props) => {\r\n  const notify = useNotify();\r\n  const refresh = useRefresh();\r\n  return (\r\n  <Button\r\n  onClick={() => {\r\n    if(window.confirm(`Are you sure you want to disable- ${props.record.username}`)){\r\n     \r\n      changeUserStatus(\r\n        props.record\r\n      )\r\n        .then(data => {\r\n          console.log(data);\r\n          notify(props.record.active ? 'Disable Success' : 'Activated Sucess');\r\n          refresh();\r\n        })\r\n        .catch(error =>{\r\n          console.log(error);\r\n          // this.props.notify(error.message)\r\n          })\r\n    }else{\r\n      console.log('no');\r\n    }\r\n    \r\n     }}\r\n  \r\n>\r\n  \r\n  <span style={{ fontSize: 10 }}>Status: {props.record.active ? ' Active': ' Disabled'}</span>\r\n</Button>\r\n)};\r\n\r\nexport const UserList = props => (\r\n  <List title=\"Users\" {...props} bulkActionButtons={false} perPage={100} filters={<UserFilter />}>\r\n    <Datagrid  >\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"firstName\" />\r\n      <TextField source=\"lastName\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n      <ReferenceField\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin/all\"\r\n        link={false}\r\n      >\r\n        <TextField source=\"authority\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin/all\"\r\n        link={false}\r\n      >\r\n        <TextField source=\"name\" />\r\n      </ReferenceField>\r\n      <CustomButton/>\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import { client } from \"../../providers/client\";\r\n\r\nexport function fetchOverviewStats() {\r\n  return client\r\n    .get(\r\n      `/sema/overview`\r\n    )\r\n    .then(response => {\r\n      console.log('response', response.data);\r\n      return response.data;\r\n    });\r\n}\r\n\r\n\r\nexport function changeUserStatus(user) {\r\n  return client\r\n    .post(\r\n      `/sema/users/admin/userStatus`,\r\n      user\r\n    )\r\n    .then(response => {\r\n      console.log('response', response.data);\r\n      return response.data;\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  AutocompleteInput\r\n} from \"react-admin\";\r\n\r\nexport const UserCreate = props => (\r\n  <Create title=\"Register User\" {...props}>\r\n    <SimpleForm redirect={redirect}>\r\n      <TextInput source=\"firstName\" />\r\n      <TextInput source=\"lastName\" />\r\n      <TextInput source=\"username\" />\r\n      <TextInput source=\"password\" />\r\n      <ReferenceInput\r\n        label=\"Franchise\"\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin/all\">\r\n        <AutocompleteInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"email\" />\r\n      <ReferenceInput\r\n        label=\"Role\"\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin\"\r\n      >\r\n         <AutocompleteInput optionText=\"authority\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst redirect = (_basePath, _id) => `/sema/users/admin`;\r\n","import React from \"react\";\r\nimport { Toolbar, SaveButton } from \"react-admin\";\r\n\r\nexport const EditToolbar = props => (\r\n  <Toolbar {...props}>\r\n    <SaveButton />\r\n  </Toolbar>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  AutocompleteInput,\r\n  ReferenceInput\r\n} from \"react-admin\";\r\n\r\nimport { EditToolbar } from \"../../elements/edit-toolbar\";\r\n\r\nexport const UserEdit = props => (\r\n  <Edit title=\"Edit User\" {...props}>\r\n    <SimpleForm toolbar={<EditToolbar />} redirect={redirect}>\r\n      <TextInput source=\"firstName\" />\r\n      <TextInput source=\"lastName\" />\r\n      <TextInput source=\"username\" />\r\n      <TextInput source=\"email\" />\r\n\r\n      <ReferenceInput\r\n        label=\"Franchise\"\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin/all\">\r\n        <AutocompleteInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n\r\n      <ReferenceInput\r\n        label=\"Role\"\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin/all\"\r\n      >\r\n         <AutocompleteInput optionText=\"authority\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nconst redirect = (_basePath, _id) => `/sema/users/admin`;\r\n","import AccountCircle from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport { UserList } from \"./list\";\r\nimport { UserCreate } from \"./create\";\r\nimport { UserEdit } from \"./edit\";\r\n\r\nconst users = {\r\n  name: \"sema/users/admin\",\r\n  options: {\r\n    label: \"Users\"\r\n  },\r\n  icon: AccountCircle,\r\n  list: UserList,\r\n  create: UserCreate,\r\n  edit: UserEdit\r\n};\r\n\r\nexport default users;\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  ImageInput,\r\n  ImageField, AutocompleteInput, ReferenceInput\r\n} from \"react-admin\";\r\n\r\nexport const CreateProduct = props => {\r\n  return (\r\n    <Create title=\"Create Product\" {...props}>\r\n      <SimpleForm redirect={redirect}>\r\n\r\n        {/* <ImageInput source=\"base64Image\" label=\"Related pictures\" >\r\n          <ImageInput label=\"Image\" source=\"base64Image\" />\r\n        </ImageInput> */}\r\n        <TextInput  source=\"base64Image\" resettable />\r\n        <TextInput source=\"name\" />\r\n        <ReferenceInput\r\n        label=\"Category\"\r\n        source=\"category\"\r\n        reference=\"sema/product_category/admin\"\r\n      >\r\n         <AutocompleteInput optionText=\"description\" />\r\n      </ReferenceInput>\r\n\r\n\r\n        {/* <TextInput source=\"category\" /> */}\r\n        <TextInput source=\"description\" />\r\n        <TextInput source=\"sku\" />\r\n        <TextInput source=\"priceAmount\" />\r\n        <TextInput source=\"priceCurrency\" />\r\n        <TextInput source=\"unitMeasurement\" />\r\n        <TextInput source=\"minQuantity\" />\r\n        <TextInput source=\"maxQuantity\" />\r\n        <TextInput source=\"unitsPerProduct\" />\r\n        <TextInput source=\"costOfGoods\" />\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nconst redirect = (_basePath, _id, data) => `sema/products/admin`;\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,SaveButton,\r\n  DeleteButton,Toolbar,\r\n  ImageField, AutocompleteInput, ReferenceInput\r\n} from \"react-admin\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n});\r\nconst CustomToolbar = props => (\r\n  <Toolbar {...props} classes={useStyles()}>\r\n      <SaveButton /> \r\n  </Toolbar>\r\n);\r\n\r\nexport const EditProduct = props => {\r\n  return (\r\n    <Edit title=\"Edit Product\" {...props}>\r\n      <SimpleForm redirect={redirect} toolbar={<CustomToolbar />}>\r\n        <ImageField label=\"Image\" source=\"base64Image\" />\r\n        <TextInput source=\"base64Image\" resettable />\r\n        <TextInput source=\"name\" />\r\n\r\n        <ReferenceInput\r\n        label=\"Category\"\r\n        source=\"category\"\r\n        reference=\"sema/product_category/admin\"\r\n      >\r\n         <AutocompleteInput optionText=\"description\" />\r\n      </ReferenceInput> \r\n        <TextInput source=\"description\" />\r\n        <TextInput source=\"sku\" />\r\n        <TextInput source=\"priceAmount\" />\r\n        <TextInput source=\"priceCurrency\" />\r\n        <TextInput source=\"unitMeasurement\" />\r\n        <TextInput source=\"minQuantity\" />\r\n        <TextInput source=\"maxQuantity\" />\r\n        <TextInput source=\"unitsPerProduct\" />\r\n        <TextInput source=\"costOfGoods\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nconst redirect = (_basePath, id) => `/sema/products/admin`;\r\n","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useShowController, ReferenceField, List, Filter, TextInput, Datagrid, TextField, ImageField } from \"react-admin\";\r\n\r\nconst PostPanel = ({ id, record, resource }) => (\r\n  <Typography>\r\n    {`Description - `}, {record.description}\r\n    <br />\r\n    {`Price Amount - `}, {record.priceAmount}\r\n    <br />\r\n    {`Price currency - `},{record.priceCurrency}\r\n    <br />\r\n    {`Units Per Product - `}, {record.unitsPerProduct}\r\n    <br />\r\n    {`Cost Of Goods - `}, {record.costOfGoods},\r\n    <br /> {`SKU - `} ,{record.sku}\r\n    <br />\r\n    {`Min Quantity - `}, {record.minQuantity}\r\n    <br />\r\n    {`Max Quantity - `}, {record.maxQuantity}\r\n    <br />\r\n    {`Unit Measurement - `}, {record.unitMeasurement}\r\n  </Typography>\r\n);\r\n\r\nconst SearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"customfilter\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const ListProducts = props => (\r\n  <List title=\"Products\" {...props} bulkActionButtons={false} perPage={100} filters={<SearchFilter />}>\r\n    <Datagrid rowClick=\"edit\" expand={<PostPanel />}>\r\n      <TextField source=\"id\" />\r\n      <ImageField label=\"Image\" source=\"base64Image\" />\r\n\r\n\r\n      <ReferenceField\r\n        source=\"category\"\r\n        reference=\"sema/product_category/admin\"\r\n        link={false}\r\n      >\r\n        <TextField source=\"description\" />\r\n      </ReferenceField>\r\n\r\n      {/* <TextField source=\"category\" /> */}\r\n      <TextField source=\"name\" />\r\n      {/* <TextField source=\"description\" /> */}\r\n      <TextField source=\"sku\" />\r\n      {/* <TextField source=\"priceAmount\" />\r\n      <TextField source=\"priceCurrency\" />\r\n      <TextField source=\"unitMeasurement\" />\r\n      <TextField source=\"minQuantity\" />\r\n      <TextField source=\"maxQuantity\" />\r\n      <TextField source=\"unitsPerProduct\" />\r\n      <TextField source=\"costOfGoods\" /> */}\r\n\r\n\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import { Book } from \"@material-ui/icons\";\r\nimport { CreateProduct } from \"./create\";\r\nimport { EditProduct } from \"./edit\";\r\nimport { ListProducts } from \"./list\";\r\n\r\nconst products = {\r\n  name: \"sema/products/admin\",\r\n  options: {\r\n    label: \"Products\"\r\n  },\r\n  icon: Book,\r\n  create: CreateProduct,\r\n  edit: EditProduct,\r\n  list: ListProducts,\r\n};\r\n\r\nexport default products;\r\n","import React from \"react\";\r\nimport { List, Datagrid, Filter, TextInput, TextField, DateField } from \"react-admin\";\r\n\r\nconst SearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"customfilter\" alwaysOn />\r\n  </Filter> \r\n);\r\n\r\nexport const KioskList = props => (\r\n  <List title=\"Kiosks\" {...props} bulkActionButtons={false} perPage={100} filters={<SearchFilter />}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <DateField label=\"Created\" source=\"created_at\" />\r\n    </Datagrid> \r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport { Create, SimpleForm, TextInput } from \"react-admin\";\r\n\r\nexport const KioskCreate = props => (\r\n  <Create title=\"Add Kiosk\" {...props}>\r\n    <SimpleForm redirect={redirect}>\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst redirect = (_basePath, id) => `sema/kiosks/admin`;\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  TextField,SaveButton,\r\n  DeleteButton,Toolbar,\r\n} from \"react-admin\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  toolbar: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n  },\r\n});\r\nconst CustomToolbar = props => (\r\n<Toolbar {...props} classes={useStyles()}>\r\n    <SaveButton /> \r\n</Toolbar>\r\n);\r\n\r\nexport const Title = ({ record }) => <span>Kiosk #{record.id}</span>;\r\n\r\nexport const KioskEdit = props => (\r\n  <Edit title={<Title />} {...props}>\r\n    <SimpleForm redirect={redirect} toolbar={<CustomToolbar />}>\r\n      <TextField source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nconst redirect = (_basePath, id) => `sema/kiosks/admin`;\r\n","import { AccountBalance } from \"@material-ui/icons\";\r\nimport { KioskList } from \"./list\";\r\nimport { KioskCreate } from \"./create\";\r\nimport { KioskEdit } from \"./edit\";\r\n\r\nconst kiosks = {\r\n  name: \"sema/kiosks/admin\",\r\n  options: {\r\n    label: \"Franchises\"\r\n  },\r\n  icon: AccountBalance,\r\n  list: KioskList,\r\n  create: KioskCreate,\r\n  edit: KioskEdit\r\n};\r\n\r\nexport default kiosks;\r\n","import { ShopTwo } from \"@material-ui/icons\";\r\n\r\nconst roles = {\r\n  name: \"sema/roles/admin\",\r\n  options: {\r\n    label: \"Roles\"\r\n  },\r\n  icon: ShopTwo\r\n};\r\n\r\nexport default roles;","import users from \"./users\";\r\nimport products from \"./products\";\r\nimport kiosks from \"./kiosks\";\r\nimport roles from \"./roles\";\r\nimport allKiosks from \"./allkiosk\";\r\nimport allRoles from \"./allRoles\";\r\nimport allProductCategories from \"./product_category\";\r\n\r\nexport default {\r\n  users,\r\n  products,\r\n  kiosks,\r\n  roles, \r\n  allKiosks,\r\n  allRoles,\r\n  allProductCategories \r\n};\r\n ","import { ShopTwo } from \"@material-ui/icons\";\r\n\r\nconst allKiosks = {\r\n  name: \"sema/kiosks/admin/all\",\r\n  options: {\r\n    label: \"All kiosks\"\r\n  },\r\n  icon: ShopTwo\r\n};\r\n\r\nexport default allKiosks;","import { ShopTwo } from \"@material-ui/icons\";\r\n\r\nconst allRoles = {\r\n  name: \"sema/roles/admin/all\",\r\n  options: {\r\n    label: \"All Roles\"\r\n  },\r\n  icon: ShopTwo\r\n};\r\n\r\nexport default allRoles;","import { ShopTwo } from \"@material-ui/icons\";\r\n\r\nconst allProductCategories = {\r\n  name: \"sema/product_category/admin\",\r\n  options: {\r\n    label: \"All Product Category\"\r\n  },\r\n  icon: ShopTwo\r\n};\r\n\r\nexport default allProductCategories;","import users from \"../admin/users\";\r\nimport products from \"../admin/products\";\r\nimport kiosks from \"../admin/kiosks\";\r\nimport roles from \"../admin/roles\";\r\n\r\nexport default {\r\n  products,\r\n  kiosks,\r\n  roles,  \r\n};\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport { fetchOverviewStats } from \"./operations\";\r\n\r\nconst defaultOverviewState = {\r\n  date: new Date(),\r\n  users: 0,\r\n  products: 0,\r\n  franchises: 0\r\n};\r\n\r\nexport class Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = defaultOverviewState;\r\n\r\n    this.updateStats = this.updateStats.bind(this);\r\n  }\r\n\r\n  updateStats(subState) {\r\n    this.setState(subState, () =>\r\n      fetchOverviewStats(\r\n      )\r\n        .then(data => {\r\n          const { users, products, franchises } = data;\r\n          console.log(data);\r\n          this.setState({\r\n            users,\r\n            products,\r\n            franchises\r\n          });\r\n        })\r\n        .catch(error => this.props.notify(error.message))\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateStats({});\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.viewVersion !== this.props.viewVersion) {\r\n      this.updateStats({});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    return (\r\n      <>\r\n        <Typography variant=\"headline\">Overview</Typography>\r\n\r\n\r\n        <Grid className={classes.grid} item xs={12} md={4} container spacing={16}>\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n              <Typography variant=\"body2\">Users</Typography>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                  <Grid container alignItems=\"center\" spacing={16}>\r\n                    <Typography variant=\"display1\">{this.state.users}</Typography>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n              <Typography variant=\"body2\">Products</Typography>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                  <Grid container alignItems=\"center\" spacing={16}>\r\n                    <Typography variant=\"display1\">{this.state.products}</Typography>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n              <Typography variant=\"body2\">Franchise</Typography>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                    <Typography variant=\"display1\">{this.state.franchises}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid> \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showNotification } from \"react-admin\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { Overview } from \"./overview\";\r\n   \r\nconst Dashboard = props => {\r\n  return (\r\n    <>\r\n      <Overview {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = theme => ({\r\n  grid: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2\r\n  },\r\n  card: {\r\n    maxWidth: 300,\r\n    margin: \"auto\",\r\n    transition: \"0.3s\",\r\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n    }\r\n  },\r\n  content: {\r\n    textAlign: \"left\",\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  state => ({ viewVersion: state.admin.ui.viewVersion }),\r\n  { notify: showNotification }\r\n)(withStyles(styles)(Dashboard));\r\n","import React from 'react';\r\nimport { Login, LoginForm } from 'react-admin';\r\n\r\nconst CustomLoginPage = props => (\r\n    <Login\r\n    backgroundImage=\"https://jibuco.com/wp-content/uploads/2020/03/bottlesrackmin-scaled.jpg\"\r\n    />\r\n);\r\nexport default CustomLoginPage;","import {\r\n  AUTH_CHECK,\r\n  AUTH_ERROR,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT,\r\n  AUTH_GET_PERMISSIONS,\r\n  useRefresh\r\n} from \"react-admin\";\r\nimport decodeJwt from \"jwt-decode\";\r\n\r\nconst authActions = {\r\n  [AUTH_ERROR]: authError,\r\n  [AUTH_LOGIN]: authLogin,\r\n  [AUTH_LOGOUT]: authLogout,\r\n  [AUTH_CHECK]: authCheck,\r\n  [AUTH_GET_PERMISSIONS]: authGetPermissions\r\n};\r\n\r\nexport function authProvider(client) {\r\n  return (type, params) => {\r\n    const action = authActions[type];\r\n\r\n    return action(params, client);\r\n  };\r\n}\r\n\r\nfunction authCheck(_params) {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) {\r\n    return Promise.reject();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction authError(error) {\r\n  if (error.status === 401) {\r\n    return Promise.reject();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction authLogin(params, client) {\r\n  const { username, password } = params;\r\n  //const refresh = useRefresh();\r\n  return client\r\n    .post(`/sema/login`, { usernameOrEmail: username, password })\r\n    .then(response => {\r\n      console.log('response', response);\r\n      return response.data;\r\n    })\r\n    .then(({ token, userSatus }) => {\r\n      console.log('active', userSatus);\r\n      if(userSatus){\r\n        localStorage.setItem(\"token\", token);\r\n      }\r\n      if(!userSatus){\r\n        alert(\"Account is Inactive\");\r\n      }\r\n      \r\n    });\r\n}\r\n\r\nfunction authLogout(_params, _client) {\r\n  localStorage.removeItem(\"token\");\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction jsonToken() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const decodedToken = token ? decodeJwt(token) : null;\r\n  return decodedToken;\r\n}\r\n\r\nfunction authGetPermissions() {\r\n  const user = jsonToken();\r\n  return user ? Promise.resolve(user) : Promise.reject();\r\n}\r\n","import { stringify } from \"qs\";\r\nimport {\r\n  GET_LIST,\r\n  GET_ONE,\r\n  CREATE,\r\n  UPDATE,\r\n  UPDATE_MANY,\r\n  DELETE,\r\n  DELETE_MANY,\r\n  GET_MANY,\r\n  GET_MANY_REFERENCE\r\n} from \"react-admin\";\r\n\r\nconst SAMPLE_CUSTOM_ACTION = \"SAMPLE_CUSTOM_ACTION\";\r\n\r\nconst restActions = {\r\n  [CREATE]: create,\r\n  [DELETE]: destroy,\r\n  [DELETE_MANY]: destroyMany,\r\n  [GET_LIST]: getList,\r\n  [GET_MANY]: getMany,\r\n  [GET_MANY_REFERENCE]: getManyReference,\r\n  [GET_ONE]: getOne,\r\n  [UPDATE]: update,\r\n  [UPDATE_MANY]: updateMany\r\n};\r\n\r\nconst resourceAction = {\r\n  \"sample/resouce\": {\r\n    [SAMPLE_CUSTOM_ACTION]: (url, params) => ({\r\n      url,\r\n      params\r\n    })\r\n  }\r\n};\r\n\r\nexport function getAction(type, resource) {\r\n  if (restActions[type]) {\r\n    return restActions[type];\r\n  }\r\n\r\n  if (resourceAction[resource] && resourceAction[resource][type]) {\r\n    return resourceAction[resource][type];\r\n  }\r\n}\r\n\r\nfunction getList(url, params) {\r\n  return {\r\n    method: \"GET\",\r\n    url: `${url}?${stringify({\r\n      ...params.pagination,\r\n      ...params.sort,\r\n      filter: params.filter\r\n    })}`\r\n  };\r\n}\r\n\r\nfunction getOne(url, params) {\r\n  return { method: \"GET\", url: `${url}/${params.id}` };\r\n}\r\n\r\nfunction getMany(url, params) {\r\n  const { ids } = params;\r\n\r\n  return { method: \"GET\", url: `${url}?${stringify({ ids })}` };\r\n}\r\n\r\nfunction getManyReference(url, params) {\r\n  const { page, perPage } = params.pagination;\r\n  const { field, order } = params.sort;\r\n  const query = {\r\n    field,\r\n    order,\r\n    page,\r\n    perPage,\r\n    filter: {\r\n      ...params.filter,\r\n      [params.target]: params.id\r\n    }\r\n  };\r\n\r\n  return { method: \"GET\", url: `${url}?${stringify(query)}` };\r\n}\r\n\r\nfunction create(url, params) {\r\n  return { method: \"POST\", url, data: params.data };\r\n}\r\n\r\nfunction update(url, params) {\r\n  return { method: \"PUT\", url: `${url}/${params.id}`, data: params.data };\r\n}\r\n\r\nfunction updateMany(url, params) {\r\n  const { ids, data } = params;\r\n  return { method: \"PUT\", url: `${url}?${stringify({ ids })}`, data };\r\n}\r\n\r\nfunction destroy(url, params) {\r\n  return { method: \"DELETE\", url: `${url}/${params.id}` };\r\n}\r\n\r\nfunction destroyMany(url, params) {\r\n  const { ids } = params;\r\n  return { method: \"DELETE\", url: `${url}?${stringify({ ids })}` };\r\n}\r\n","import { HttpError } from \"react-admin\";\r\nimport { getAction } from \"./actions\";\r\n\r\nexport function restProvider(client) {\r\n  return (type, resource, params) => {\r\n    const getConfig = getAction(type, resource);\r\n\r\n    if (!getConfig) {\r\n      return Promise.reject(new HttpError(\"Unsupported action\"));\r\n    }\r\n\r\n    const url = `/${resource}`;\r\n\r\n    const config = getConfig(url, params);\r\n\r\n    return client(config)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.message\r\n        ) {\r\n          return Promise.reject(\r\n            new HttpError(error.response.data.message, error.response.status)\r\n          );\r\n        }\r\n\r\n        return Promise.reject(new HttpError(error.message));\r\n      });\r\n  };\r\n}\r\n","import realtimeSaga from \"ra-realtime\";\r\nimport { GET_LIST, GET_ONE } from \"react-admin\";\r\n\r\nconst observeRequest = dataProvider => (type, resource, params) => {\r\n  if (\r\n    resource === \"admin/print-runs\" &&\r\n    (type === GET_LIST || type === GET_ONE)\r\n  ) {\r\n    return {\r\n      subscribe(observer) {\r\n        let intervalId = setInterval(() => {\r\n          dataProvider(type, resource, params)\r\n            .then(results => observer.next(results)) // New data received, notify the observer\r\n            .catch(error => observer.error(error)); // Ouch, an error occured, notify the observer\r\n        }, 3000);\r\n\r\n        const subscription = {\r\n          unsubscribe() {\r\n            if (intervalId) {\r\n              // Clean up after ourselves\r\n              clearInterval(intervalId);\r\n              intervalId = undefined;\r\n              // Notify the saga that we cleaned up everything\r\n              observer.complete();\r\n            }\r\n          }\r\n        };\r\n\r\n        return subscription;\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const realTimeProvider = dataProvider =>\r\n  realtimeSaga(observeRequest(dataProvider));\r\n","import { restProvider } from \"./rest\";\r\nimport { realTimeProvider } from \"./realtime\";\r\nimport { client } from \"./client\";\r\n\r\nexport const dataProvider = restProvider(client);\r\nexport const realTimeSaga = realTimeProvider(dataProvider);\r\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport admin from './admin';\nimport other from './other';\n\nimport dashboard from './admin/dashboard';\nimport CustomLoginPage from \"./elements/login\";\nimport { authProvider } from \"./providers/auth\";\nimport { client } from \"./providers/client\";\nimport { dataProvider } from \"./providers\";\nimport { realTimeProvider } from \"./providers/realtime\";\n\nconst App = () => (\n   <Admin dashboard={dashboard}   \n    authProvider={authProvider(client)}\n    dataProvider={dataProvider}\n    customSagas={[realTimeProvider]}\n    loginPage={CustomLoginPage}\n  >\n    {user => {\n      const resources = getResources(user);\n      return Object.keys(resources).map(resourceName => {\n        return <Resource {...resources[resourceName]} />;\n      });\n    }}\n\n  </Admin>\n\n);\n\nfunction getResources(user) {\n  console.log('user', user.role[0].code);\n  if (user.role[0].code === \"admin\") {\n    return admin;\n  }\n\n  if (user.role[0].code !== \"admin\") {\n     return other\n  }\n\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}