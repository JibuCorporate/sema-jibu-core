{"version":3,"sources":["config.js","users/create.js","elements/edit-toolbar.js","users/edit.js","users/index.js","users/list.js","products/create.js","products/edit.js","products/index.js","products/list.js","kiosks/create.js","kiosks/edit.js","kiosks/index.js","kiosks/list.js","roles/index.js","dashboard/Dashboard.js","elements/login.js","providers/auth.js","providers/client.js","providers/actions.js","providers/rest.js","providers/realtime.js","providers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendUrl","webUrl","port","redirect","_basePath","_id","EditToolbar","props","Toolbar","SaveButton","users","name","options","label","icon","AccountCircle","list","List","title","Datagrid","rowClick","TextField","source","EmailField","ReferenceField","reference","link","create","Create","SimpleForm","TextInput","ReferenceInput","SelectInput","optionText","edit","Edit","toolbar","data","id","products","Book","Title","record","kiosks","AccountBalance","DateField","roles","ShopTwo","Card","CardHeader","CardContent","CustomLoginPage","Login","backgroundImage","authActions","AUTH_ERROR","error","status","Promise","reject","resolve","AUTH_LOGIN","params","client","username","password","post","usernameOrEmail","then","response","console","log","token","localStorage","setItem","AUTH_LOGOUT","_params","_client","removeItem","AUTH_CHECK","getItem","AUTH_GET_PERMISSIONS","user","decodeJwt","jsonToken","authProvider","type","action","baseURL","axios","interceptors","request","use","accessToken","headers","Authorization","httpClient","restActions","CREATE","url","method","DELETE","DELETE_MANY","ids","stringify","GET_LIST","pagination","sort","filter","GET_MANY","GET_MANY_REFERENCE","page","perPage","field","order","query","target","GET_ONE","UPDATE","UPDATE_MANY","resourceAction","realTimeProvider","dataProvider","realtimeSaga","resource","subscribe","observer","intervalId","setInterval","results","next","catch","unsubscribe","clearInterval","undefined","complete","observeRequest","getConfig","getAction","HttpError","config","message","App","Admin","dashboard","Dashboard","customSagas","loginPage","Resource","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c0d8f45.chunk.js","sourcesContent":["\r\nmodule.exports.backendUrl = \"http://142.93.115.206:3002/\";\r\nmodule.exports.webUrl =  \"http://localhost:3002\";\r\nmodule.exports.port = 3000;\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  SelectInput,\r\n  ReferenceInput\r\n} from \"react-admin\";\r\n\r\nexport const UserCreate = props => (\r\n  <Create title=\"Register User\" {...props}>\r\n    <SimpleForm redirect={redirect}>\r\n      <TextInput source=\"firstName\" />\r\n      <TextInput source=\"lastName\" />\r\n      <TextInput source=\"username\" />\r\n      <TextInput source=\"password\" />\r\n      <ReferenceInput\r\n        label=\"Kiosk\"\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin\"\r\n      >\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"email\" />\r\n\r\n   \r\n\r\n\r\n      <ReferenceInput\r\n        label=\"Role\"\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin\"\r\n      >\r\n        <SelectInput optionText=\"authority\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst redirect = (_basePath, _id) => `/sema/users/admin`;\r\n","import React from \"react\";\r\nimport { Toolbar, SaveButton } from \"react-admin\";\r\n\r\nexport const EditToolbar = props => (\r\n  <Toolbar {...props}>\r\n    <SaveButton />\r\n  </Toolbar>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  SelectInput,\r\n  ReferenceInput\r\n} from \"react-admin\";\r\n\r\nimport { EditToolbar } from \"../elements/edit-toolbar\";\r\n\r\nexport const UserEdit = props => (\r\n  <Edit title=\"Edit User\" {...props}>\r\n    <SimpleForm toolbar={<EditToolbar />} redirect={redirect}>\r\n      <TextInput source=\"firstName\" />\r\n      <TextInput source=\"lastName\" />\r\n      <TextInput source=\"username\" />\r\n      <TextInput source=\"email\" />\r\n\r\n      <ReferenceInput\r\n        label=\"Role\"\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin\"\r\n      >\r\n        <SelectInput optionText=\"authority\" />\r\n      </ReferenceInput>\r\n\r\n      <ReferenceInput\r\n        label=\"Kiosk\"\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin\"\r\n      >\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nconst redirect = (_basePath, _id) => `/sema/users/admin`;\r\n","import AccountCircle from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nimport { UserList } from \"./list\";\r\nimport { UserCreate } from \"./create\";\r\nimport { UserEdit } from \"./edit\";\r\n\r\nconst users = {\r\n  name: \"sema/users/admin\",\r\n  options: {\r\n    label: \"Users\"\r\n  },\r\n  icon: AccountCircle,\r\n  list: UserList,\r\n  create: UserCreate,\r\n  edit: UserEdit\r\n};\r\n\r\nexport default users;\r\n","import React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField, ReferenceField } from \"react-admin\";\r\n\r\nexport const UserList = props => (\r\n  <List title=\"Users\" {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"firstName\" />\r\n      <TextField source=\"lastName\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n\r\n      <ReferenceField\r\n        source=\"role\"\r\n        reference=\"sema/roles/admin\"\r\n        link={false}\r\n      >\r\n        <TextField source=\"authority\" />\r\n      </ReferenceField>\r\n\r\n      <ReferenceField\r\n        source=\"kiosk\"\r\n        reference=\"sema/kiosks/admin\"\r\n        link={false}\r\n      >\r\n        <TextField source=\"name\" />\r\n      </ReferenceField>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n} from \"react-admin\";\r\n\r\nexport const CreateProduct = props => {\r\n  return (\r\n    <Create title=\"Create Product\" {...props}>\r\n      <SimpleForm redirect={redirect}>\r\n        <TextInput source=\"description\" />\r\n        <TextInput source=\"sku\" />\r\n        <TextInput source=\"priceAmount\" />\r\n        <TextInput source=\"priceCurrency\" />\r\n        <TextInput source=\"unitMeasurement\" />\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nconst redirect = (_basePath, _id, data) => `sema/products/admin`;\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput\r\n} from \"react-admin\";\r\nexport const EditProduct = props => {\r\n  return (\r\n    <Edit title=\"Edit Product\" {...props}>\r\n      <SimpleForm redirect={redirect}>\r\n        <TextInput source=\"description\" />\r\n        <TextInput source=\"sku\" />\r\n        <TextInput source=\"priceAmount\" />\r\n        <TextInput source=\"priceCurrency\" />\r\n        <TextInput source=\"unitMeasurement\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nconst redirect = (_basePath, id) => `sema/products/admin`;\r\n","import { Book } from \"@material-ui/icons\";\r\nimport { CreateProduct } from \"./create\";\r\nimport { EditProduct } from \"./edit\";\r\nimport { ListProducts } from \"./list\";\r\n\r\nconst products = {\r\n  name: \"sema/products/admin\",\r\n  options: {\r\n    label: \"Products\"\r\n  },\r\n  icon: Book,\r\n  create: CreateProduct,\r\n  edit: EditProduct,\r\n  list: ListProducts,\r\n};\r\n\r\nexport default products;\r\n","import React from \"react\";\r\nimport { List, Datagrid, TextField } from \"react-admin\";\r\n\r\nexport const ListProducts = props => (\r\n  <List title=\"Products\" {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"description\" />\r\n      <TextField source=\"sku\" />\r\n      <TextField source=\"priceAmount\" />\r\n      <TextField source=\"priceCurrency\" />\r\n      <TextField source=\"unitMeasurement\" />\r\n\r\n\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport { Create, SimpleForm, TextInput } from \"react-admin\";\r\n\r\nexport const KioskCreate = props => (\r\n  <Create title=\"Add Kiosk\" {...props}>\r\n    <SimpleForm redirect={redirect}>\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nconst redirect = (_basePath, id) => `sema/kiosks/admin`;\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  TextField,\r\n} from \"react-admin\";\r\n\r\nexport const Title = ({ record }) => <span>Kiosk #{record.id}</span>;\r\n\r\nexport const KioskEdit = props => (\r\n  <Edit title={<Title />} {...props}>\r\n    <SimpleForm redirect={redirect}>\r\n      <TextField source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nconst redirect = (_basePath, id) => `sema/kiosks/admin`;\r\n","import { AccountBalance } from \"@material-ui/icons\";\r\nimport { KioskList } from \"./list\";\r\nimport { KioskCreate } from \"./create\";\r\nimport { KioskEdit } from \"./edit\";\r\n\r\nconst kiosks = {\r\n  name: \"sema/kiosks/admin\",\r\n  options: {\r\n    label: \"Kiosks\"\r\n  },\r\n  icon: AccountBalance,\r\n  list: KioskList,\r\n  create: KioskCreate,\r\n  edit: KioskEdit\r\n};\r\n\r\nexport default kiosks;\r\n","import React from \"react\";\r\nimport { List, Datagrid, TextField, DateField } from \"react-admin\";\r\n\r\nexport const KioskList = props => (\r\n  <List title=\"Kiosks\" {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <DateField label=\"Created\" source=\"created_at\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import { ShopTwo } from \"@material-ui/icons\";\r\n\r\nconst roles = {\r\n  name: \"sema/roles/admin\",\r\n  options: {\r\n    label: \"Roles\"\r\n  },\r\n  icon: ShopTwo\r\n};\r\n\r\nexport default roles;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome SEMA Admin\" />\n        <CardContent>...</CardContent>\n    </Card>\n);","import React from 'react';\r\nimport { Login, LoginForm } from 'react-admin';\r\n\r\nconst CustomLoginPage = props => (\r\n    <Login\r\n    backgroundImage=\"https://jibuco.com/wp-content/uploads/2020/03/bottlesrackmin-scaled.jpg\"\r\n    />\r\n);\r\nexport default CustomLoginPage;","import {\r\n  AUTH_CHECK,\r\n  AUTH_ERROR,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT,\r\n  AUTH_GET_PERMISSIONS\r\n} from \"react-admin\";\r\nimport decodeJwt from \"jwt-decode\";\r\n\r\nconst authActions = {\r\n  [AUTH_ERROR]: authError,\r\n  [AUTH_LOGIN]: authLogin,\r\n  [AUTH_LOGOUT]: authLogout,\r\n  [AUTH_CHECK]: authCheck,\r\n  [AUTH_GET_PERMISSIONS]: authGetPermissions\r\n};\r\n\r\nexport function authProvider(client) {\r\n  return (type, params) => {\r\n    const action = authActions[type];\r\n\r\n    return action(params, client);\r\n  };\r\n}\r\n\r\nfunction authCheck(_params) {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) {\r\n    return Promise.reject();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction authError(error) {\r\n  if (error.status === 401) {\r\n    return Promise.reject();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction authLogin(params, client) {\r\n  const { username, password } = params;\r\n  return client\r\n    .post(`/sema/login`, { usernameOrEmail: username, password })\r\n    .then(response => {\r\n      console.log('response', response);\r\n      return response.data;\r\n    })\r\n    .then(({ token }) => {\r\n      localStorage.setItem(\"token\", token);\r\n    });\r\n}\r\n\r\nfunction authLogout(_params, _client) {\r\n  localStorage.removeItem(\"token\");\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction jsonToken() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const decodedToken = token ? decodeJwt(token) : null;\r\n  return decodedToken;\r\n}\r\n\r\nfunction authGetPermissions() {\r\n  const user = jsonToken();\r\n  return user ? Promise.resolve(user) : Promise.reject();\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport { backendUrl } from \"../config\";\r\n\r\nexport function httpClient(baseURL) {\r\n  const client = axios.create({ baseURL });\r\n  client.interceptors.request.use(request => {\r\n    const accessToken = localStorage.getItem(\"token\");\r\n    return {\r\n      ...request,\r\n      headers: {\r\n        ...request.headers,\r\n        ...(accessToken ? { Authorization: `Bearer ${accessToken}` } : {})\r\n      }\r\n    };\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport const client = httpClient(backendUrl);\r\n","import { stringify } from \"qs\";\r\nimport {\r\n  GET_LIST,\r\n  GET_ONE,\r\n  CREATE,\r\n  UPDATE,\r\n  UPDATE_MANY,\r\n  DELETE,\r\n  DELETE_MANY,\r\n  GET_MANY,\r\n  GET_MANY_REFERENCE\r\n} from \"react-admin\";\r\n\r\nconst SAMPLE_CUSTOM_ACTION = \"SAMPLE_CUSTOM_ACTION\";\r\n\r\nconst restActions = {\r\n  [CREATE]: create,\r\n  [DELETE]: destroy,\r\n  [DELETE_MANY]: destroyMany,\r\n  [GET_LIST]: getList,\r\n  [GET_MANY]: getMany,\r\n  [GET_MANY_REFERENCE]: getManyReference,\r\n  [GET_ONE]: getOne,\r\n  [UPDATE]: update,\r\n  [UPDATE_MANY]: updateMany\r\n};\r\n\r\nconst resourceAction = {\r\n  \"sample/resouce\": {\r\n    [SAMPLE_CUSTOM_ACTION]: (url, params) => ({\r\n      url,\r\n      params\r\n    })\r\n  }\r\n};\r\n\r\nexport function getAction(type, resource) {\r\n  if (restActions[type]) {\r\n    return restActions[type];\r\n  }\r\n\r\n  if (resourceAction[resource] && resourceAction[resource][type]) {\r\n    return resourceAction[resource][type];\r\n  }\r\n}\r\n\r\nfunction getList(url, params) {\r\n  return {\r\n    method: \"GET\",\r\n    url: `${url}?${stringify({\r\n      ...params.pagination,\r\n      ...params.sort,\r\n      filter: params.filter\r\n    })}`\r\n  };\r\n}\r\n\r\nfunction getOne(url, params) {\r\n  return { method: \"GET\", url: `${url}/${params.id}` };\r\n}\r\n\r\nfunction getMany(url, params) {\r\n  const { ids } = params;\r\n\r\n  return { method: \"GET\", url: `${url}?${stringify({ ids })}` };\r\n}\r\n\r\nfunction getManyReference(url, params) {\r\n  const { page, perPage } = params.pagination;\r\n  const { field, order } = params.sort;\r\n  const query = {\r\n    field,\r\n    order,\r\n    page,\r\n    perPage,\r\n    filter: {\r\n      ...params.filter,\r\n      [params.target]: params.id\r\n    }\r\n  };\r\n\r\n  return { method: \"GET\", url: `${url}?${stringify(query)}` };\r\n}\r\n\r\nfunction create(url, params) {\r\n  return { method: \"POST\", url, data: params.data };\r\n}\r\n\r\nfunction update(url, params) {\r\n  return { method: \"PUT\", url: `${url}/${params.id}`, data: params.data };\r\n}\r\n\r\nfunction updateMany(url, params) {\r\n  const { ids, data } = params;\r\n  return { method: \"PUT\", url: `${url}?${stringify({ ids })}`, data };\r\n}\r\n\r\nfunction destroy(url, params) {\r\n  return { method: \"DELETE\", url: `${url}/${params.id}` };\r\n}\r\n\r\nfunction destroyMany(url, params) {\r\n  const { ids } = params;\r\n  return { method: \"DELETE\", url: `${url}?${stringify({ ids })}` };\r\n}\r\n","import { HttpError } from \"react-admin\";\r\nimport { getAction } from \"./actions\";\r\n\r\nexport function restProvider(client) {\r\n  return (type, resource, params) => {\r\n    const getConfig = getAction(type, resource);\r\n\r\n    if (!getConfig) {\r\n      return Promise.reject(new HttpError(\"Unsupported action\"));\r\n    }\r\n\r\n    const url = `/${resource}`;\r\n\r\n    const config = getConfig(url, params);\r\n\r\n    return client(config)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.message\r\n        ) {\r\n          return Promise.reject(\r\n            new HttpError(error.response.data.message, error.response.status)\r\n          );\r\n        }\r\n\r\n        return Promise.reject(new HttpError(error.message));\r\n      });\r\n  };\r\n}\r\n","import realtimeSaga from \"ra-realtime\";\r\nimport { GET_LIST, GET_ONE } from \"react-admin\";\r\n\r\nconst observeRequest = dataProvider => (type, resource, params) => {\r\n  if (\r\n    resource === \"admin/print-runs\" &&\r\n    (type === GET_LIST || type === GET_ONE)\r\n  ) {\r\n    return {\r\n      subscribe(observer) {\r\n        let intervalId = setInterval(() => {\r\n          dataProvider(type, resource, params)\r\n            .then(results => observer.next(results)) // New data received, notify the observer\r\n            .catch(error => observer.error(error)); // Ouch, an error occured, notify the observer\r\n        }, 3000);\r\n\r\n        const subscription = {\r\n          unsubscribe() {\r\n            if (intervalId) {\r\n              // Clean up after ourselves\r\n              clearInterval(intervalId);\r\n              intervalId = undefined;\r\n              // Notify the saga that we cleaned up everything\r\n              observer.complete();\r\n            }\r\n          }\r\n        };\r\n\r\n        return subscription;\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const realTimeProvider = dataProvider =>\r\n  realtimeSaga(observeRequest(dataProvider));\r\n","import { restProvider } from \"./rest\";\r\nimport { realTimeProvider } from \"./realtime\";\r\nimport { client } from \"./client\";\r\n\r\nexport const dataProvider = restProvider(client);\r\nexport const realTimeSaga = realTimeProvider(dataProvider);\r\n","import React from 'react';\nimport { Admin, Resource, userLogin } from 'react-admin';\nimport users from \"./users\";\nimport products from \"./products\";\nimport kiosks from \"./kiosks\";\nimport roles from \"./roles\";\nimport Dashboard from './dashboard/Dashboard';\n\n import CustomLoginPage from \"./elements/login\";\nimport { authProvider } from \"./providers/auth\";\nimport { client } from \"./providers/client\";\nimport { dataProvider } from \"./providers\";\nimport { realTimeProvider } from \"./providers/realtime\";\n\nconst App = () => (\n  <Admin dashboard={Dashboard}\n    authProvider={authProvider(client)}\n    dataProvider={dataProvider}\n    customSagas={[realTimeProvider]}\n    loginPage={CustomLoginPage}\n  >\n    <Resource {...users} />\n    <Resource {...products} />\n    <Resource {...kiosks} />\n    <Resource {...roles} />\n\n     \n  </Admin>\n\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}